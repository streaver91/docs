%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (D:\streaver91\Desktop\AlMishinVFEFitting.eps)
%%CreationDate: Sat Dec 26 21:58:46 2015
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 45/s45 put
Encoding 46/s46 put
Encoding 47/s47 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 52/s52 put
Encoding 53/s53 put
Encoding 54/s54 put
Encoding 55/s55 put
Encoding 56/s56 put
Encoding 69/s69 put
Encoding 70/s70 put
Encoding 76/s76 put
Encoding 86/s86 put
Encoding 101/s101 put
Encoding 102/s102 put
Encoding 105/s105 put
Encoding 110/s110 put
Encoding 111/s111 put
Encoding 114/s114 put
Encoding 116/s116 put
/BoundingBoxes 27 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s45 [0 -434 682 1854] def
/s46 [0 -434 569 1854] def
/s47 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s51 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s55 [0 -434 1139 1854] def
/s56 [0 -434 1139 1854] def
/s69 [0 -434 1366 1854] def
/s70 [0 -434 1251 1854] def
/s76 [0 -434 1139 1854] def
/s86 [0 -434 1366 1854] def
/s101 [0 -434 1139 1854] def
/s102 [0 -434 569 1854] def
/s105 [0 -434 455 1854] def
/s110 [0 -434 1139 1854] def
/s111 [0 -434 1139 1854] def
/s114 [0 -434 682 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 27 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s45 682 def
/s46 569 def
/s47 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s51 1139 def
/s52 1139 def
/s53 1139 def
/s54 1139 def
/s55 1139 def
/s56 1139 def
/s69 1366 def
/s70 1251 def
/s76 1139 def
/s86 1366 def
/s101 1139 def
/s102 569 def
/s105 455 def
/s110 1139 def
/s111 1139 def
/s114 682 def
/s116 569 def
end
/CharProcs 27 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s47 {
0 -25 m
425 1491 0 -25 425 1491 c
569 1491 425 1491 569 1491 c
145 -25 569 1491 145 -25 c
0 -25 145 -25 0 -25 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s51 {
86 387 m
266 411 86 387 266 411 c
286.67 309 321.83 235.5 371.5 190.5 c
421.17 145.5 481.67 123 553 123 c
637.67 123 709.17 152.33 767.5 211 c
825.83 269.67 855 342.33 855 429 c
855 511.67 828 579.83 774 633.5 c
720 687.17 651.33 714 568 714 c
534 714 491.67 707.33 441 694 c
461 852 441 694 461 852 c
473 850.67 482.67 850 490 850 c
566.67 850 635.67 870 697 910 c
758.33 950 789 1011.67 789 1095 c
789 1161 766.67 1215.67 722 1259 c
677.33 1302.33 619.67 1324 549 1324 c
479 1324 420.67 1302 374 1258 c
327.33 1214 297.33 1148 284 1060 c
104 1092 284 1060 104 1092 c
126 1212.67 176 1306.17 254 1372.5 c
332 1438.83 429 1472 545 1472 c
625 1472 698.67 1454.83 766 1420.5 c
833.33 1386.17 884.83 1339.33 920.5 1280 c
956.17 1220.67 974 1157.67 974 1091 c
974 1027.67 957 970 923 918 c
889 866 838.67 824.67 772 794 c
858.67 774 926 732.5 974 669.5 c
1022 606.5 1046 527.67 1046 433 c
1046 305 999.33 196.5 906 107.5 c
812.67 18.5 694.67 -26 552 -26 c
423.33 -26 316.5 12.33 231.5 89 c
146.5 165.67 98 265 86 387 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
/s54 {
1019 1107 m
840 1093 1019 1107 840 1093 c
824 1163.67 801.33 1215 772 1247 c
723.33 1298.33 663.33 1324 592 1324 c
534.67 1324 484.33 1308 441 1276 c
384.33 1234.67 339.67 1174.33 307 1095 c
274.33 1015.67 257.33 902.67 256 756 c
299.33 822 352.33 871 415 903 c
477.67 935 543.33 951 612 951 c
732 951 834.17 906.83 918.5 818.5 c
1002.83 730.17 1045 616 1045 476 c
1045 384 1025.17 298.5 985.5 219.5 c
945.83 140.5 891.33 80 822 38 c
752.67 -4 674 -25 586 -25 c
436 -25 313.67 30.17 219 140.5 c
124.33 250.83 77 432.67 77 686 c
77 969.33 129.33 1175.33 234 1304 c
325.33 1416 448.33 1472 603 1472 c
718.33 1472 812.83 1439.67 886.5 1375 c
960.17 1310.33 1004.33 1221 1019 1107 c
closepath 284 475 m
284 413 297.17 353.67 323.5 297 c
349.83 240.33 386.67 197.17 434 167.5 c
481.33 137.83 531 123 583 123 c
659 123 724.33 153.67 779 215 c
833.67 276.33 861 359.67 861 465 c
861 566.33 834 646.17 780 704.5 c
726 762.83 658 792 576 792 c
494.67 792 425.67 762.83 369 704.5 c
312.33 646.17 284 569.67 284 475 c
closepath } bind def
/s55 {
97 1274 m
97 1447 97 1274 97 1447 c
1046 1447 97 1447 1046 1447 c
1046 1307 1046 1447 1046 1307 c
952.67 1207.67 860.17 1075.67 768.5 911 c
676.83 746.33 606 577 556 403 c
520 280.33 497 146 487 0 c
302 0 487 0 302 0 c
304 115.33 326.67 254.67 370 418 c
413.33 581.33 475.5 738.83 556.5 890.5 c
637.5 1042.17 723.67 1170 815 1274 c
97 1274 815 1274 97 1274 c
closepath } bind def
/s56 {
362 795 m
287.33 822.33 232 861.33 196 912 c
160 962.67 142 1023.33 142 1094 c
142 1200.67 180.33 1290.33 257 1363 c
333.67 1435.67 435.67 1472 563 1472 c
691 1472 794 1434.83 872 1360.5 c
950 1286.17 989 1195.67 989 1089 c
989 1021 971.17 961.83 935.5 911.5 c
899.83 861.17 845.67 822.33 773 795 c
863 765.67 931.5 718.33 978.5 653 c
1025.5 587.67 1049 509.67 1049 419 c
1049 293.67 1004.67 188.33 916 103 c
827.33 17.67 710.67 -25 566 -25 c
421.33 -25 304.67 17.83 216 103.5 c
127.33 189.17 83 296 83 424 c
83 519.33 107.17 599.17 155.5 663.5 c
203.83 727.83 272.67 771.67 362 795 c
closepath 326 1100 m
326 1030.67 348.33 974 393 930 c
437.67 886 495.67 864 567 864 c
636.33 864 693.17 885.83 737.5 929.5 c
781.83 973.17 804 1026.67 804 1090 c
804 1156 781.17 1211.5 735.5 1256.5 c
689.83 1301.5 633 1324 565 1324 c
496.33 1324 439.33 1302 394 1258 c
348.67 1214 326 1161.33 326 1100 c
closepath 268 423 m
268 371.67 280.17 322 304.5 274 c
328.83 226 365 188.83 413 162.5 c
461 136.17 512.67 123 568 123 c
654 123 725 150.67 781 206 c
837 261.33 865 331.67 865 417 c
865 503.67 836.17 575.33 778.5 632 c
720.83 688.67 648.67 717 562 717 c
477.33 717 407.17 689 351.5 633 c
295.83 577 268 507 268 423 c
closepath } bind def
/s69 {
162 0 m
162 1466 162 0 162 1466 c
1222 1466 162 1466 1222 1466 c
1222 1293 1222 1466 1222 1293 c
356 1293 1222 1293 356 1293 c
356 844 356 1293 356 844 c
1167 844 356 844 1167 844 c
1167 672 1167 844 1167 672 c
356 672 1167 672 356 672 c
356 173 356 672 356 173 c
1256 173 356 173 1256 173 c
1256 0 1256 173 1256 0 c
162 0 1256 0 162 0 c
closepath } bind def
/s70 {
168 0 m
168 1466 168 0 168 1466 c
1157 1466 168 1466 1157 1466 c
1157 1293 1157 1466 1157 1293 c
362 1293 1157 1293 362 1293 c
362 839 362 1293 362 839 c
1050 839 362 839 1050 839 c
1050 666 1050 839 1050 666 c
362 666 1050 666 362 666 c
362 0 362 666 362 0 c
168 0 362 0 168 0 c
closepath } bind def
/s76 {
150 0 m
150 1466 150 0 150 1466 c
344 1466 150 1466 344 1466 c
344 173 344 1466 344 173 c
1066 173 344 173 1066 173 c
1066 0 1066 173 1066 0 c
150 0 1066 0 150 0 c
closepath } bind def
/s86 {
577 0 m
9 1466 577 0 9 1466 c
219 1466 9 1466 219 1466 c
600 401 219 1466 600 401 c
630.67 315.67 656.33 235.67 677 161 c
699.67 241 726 321 756 401 c
1152 1466 756 401 1152 1466 c
1350 1466 1152 1466 1350 1466 c
776 0 1350 1466 776 0 c
577 0 776 0 577 0 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s111 {
68 531 m
68 727.67 122.67 873.33 232 968 c
323.33 1046.67 434.67 1086 566 1086 c
712 1086 831.33 1038.17 924 942.5 c
1016.67 846.83 1063 714.67 1063 546 c
1063 409.33 1042.5 301.83 1001.5 223.5 c
960.5 145.17 900.83 84.33 822.5 41 c
744.17 -2.33 658.67 -24 566 -24 c
417.33 -24 297.17 23.67 205.5 119 c
113.83 214.33 68 351.67 68 531 c
closepath 253 531 m
253 395 282.67 293.17 342 225.5 c
401.33 157.83 476 124 566 124 c
655.33 124 729.67 158 789 226 c
848.33 294 878 397.67 878 537 c
878 668.33 848.17 767.83 788.5 835.5 c
728.83 903.17 654.67 937 566 937 c
476 937 401.33 903.33 342 836 c
282.67 768.67 253 667 253 531 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 40/s40 put
Encoding 41/s41 put
Encoding 69/s69 put
Encoding 70/s70 put
Encoding 86/s86 put
Encoding 101/s101 put
/BoundingBoxes 8 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s40 [0 -434 682 1854] def
/s41 [0 -434 682 1854] def
/s69 [0 -434 1366 1854] def
/s70 [0 -434 1251 1854] def
/s86 [0 -434 1366 1854] def
/s101 [0 -434 1139 1854] def
end
/Metrics 8 dict def
 Metrics begin
/s32 569 def
/s40 682 def
/s41 682 def
/s69 1366 def
/s70 1251 def
/s86 1366 def
/s101 1139 def
end
/CharProcs 8 dict def
CharProcs begin
/.notdef {} def
/s40 {
479 -431 m
379.67 -305.67 295.67 -159 227 9 c
158.33 177 124 351 124 531 c
124 689.67 149.67 841.67 201 987 c
261 1155.67 353.67 1323.67 479 1491 c
608 1491 479 1491 608 1491 c
527.33 1352.33 474 1253.33 448 1194 c
407.33 1102 375.33 1006 352 906 c
323.33 781.33 309 656 309 530 c
309 209.33 408.67 -111 608 -431 c
479 -431 608 -431 479 -431 c
closepath } bind def
/s41 {
253 -431 m
124 -431 253 -431 124 -431 c
323.33 -111 423 209.33 423 530 c
423 655.33 408.67 779.67 380 903 c
357.33 1003 325.67 1099 285 1191 c
259 1251 205.33 1351 124 1491 c
253 1491 124 1491 253 1491 c
378.33 1323.67 471 1155.67 531 987 c
582.33 841.67 608 689.67 608 531 c
608 351 573.5 177 504.5 9 c
435.5 -159 351.67 -305.67 253 -431 c
closepath } bind def
/s69 {
162 0 m
162 1466 162 0 162 1466 c
1222 1466 162 1466 1222 1466 c
1222 1293 1222 1466 1222 1293 c
356 1293 1222 1293 356 1293 c
356 844 356 1293 356 844 c
1167 844 356 844 1167 844 c
1167 672 1167 844 1167 672 c
356 672 1167 672 356 672 c
356 173 356 672 356 173 c
1256 173 356 173 1256 173 c
1256 0 1256 173 1256 0 c
162 0 1256 0 162 0 c
closepath } bind def
/s70 {
168 0 m
168 1466 168 0 168 1466 c
1157 1466 168 1466 1157 1466 c
1157 1293 1157 1466 1157 1293 c
362 1293 1157 1293 362 1293 c
362 839 362 1293 362 839 c
1050 839 362 839 1050 839 c
1050 666 1050 839 1050 666 c
362 666 1050 666 362 666 c
362 0 362 666 362 0 c
168 0 362 0 168 0 c
closepath } bind def
/s86 {
577 0 m
9 1466 577 0 9 1466 c
219 1466 9 1466 219 1466 c
600 401 219 1466 600 401 c
630.67 315.67 656.33 235.67 677 161 c
699.67 241 726 321 756 401 c
1152 1466 756 401 1152 1466 c
1350 1466 1152 1466 1350 1466 c
776 0 1350 1466 776 0 c
577 0 776 0 577 0 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.374292 0.375863 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.641219 -0 0 -0.638533 0 1572.07] concat
gs
576 2053 m
2769 2053 l
7 sw
1 sj
1 scap
st
698 2053 m
698 2070 l
st
942 2053 m
942 2070 l
st
1185 2053 m
1185 2070 l
st
1429 2053 m
1429 2070 l
st
1673 2053 m
1673 2070 l
st
1916 2053 m
1916 2070 l
st
2160 2053 m
2160 2070 l
st
2403 2053 m
2403 2070 l
st
2647 2053 m
2647 2070 l
st
576 2053 m
576 2087 l
st
820 2053 m
820 2087 l
st
1063 2053 m
1063 2087 l
st
1307 2053 m
1307 2087 l
st
1551 2053 m
1551 2087 l
st
1794 2053 m
1794 2087 l
st
2038 2053 m
2038 2087 l
st
2282 2053 m
2282 2087 l
st
2525 2053 m
2525 2087 l
st
2769 2053 m
2769 2087 l
st
576 2053 m
576 286 l
st
576 1943 m
559 1943 l
st
576 1722 m
559 1722 l
st
576 1501 m
559 1501 l
st
576 1280 m
559 1280 l
st
576 1059 m
559 1059 l
st
576 838 m
559 838 l
st
576 617 m
559 617 l
st
576 396 m
559 396 l
st
576 2053 m
542 2053 l
st
576 1832 m
542 1832 l
st
576 1611 m
542 1611 l
st
576 1390 m
542 1390 l
st
576 1170 m
542 1170 l
st
576 949 m
542 949 l
st
576 728 m
542 728 l
st
576 507 m
542 507 l
st
576 286 m
542 286 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 524 -2170 m
(0.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 768 -2170 m
(0.5)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1011 -2170 m
(1.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1255 -2170 m
(1.5)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1499 -2170 m
(2.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1742 -2170 m
(2.5)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1986 -2170 m
(3.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2230 -2170 m
(3.5)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2473 -2170 m
(4.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2717 -2170 m
(4.5)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -2076 m
(0.6736)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -1855 m
(0.6738)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -1634 m
(0.6740)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -1413 m
(0.6742)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -1193 m
(0.6744)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -972 m
(0.6746)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -751 m
(0.6748)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -530 m
(0.6750)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 287 -309 m
(0.6752)[42 21 42 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
2462 1893 36 36 rectfill
542 286 m
3 sw
2462 1893 36 36 rectstroke
1533 1141 36 36 rectfill
1533 1141 36 36 rectstroke
1122 795 36 36 rectfill
1122 795 36 36 rectstroke
913 617 36 36 rectfill
913 617 36 36 rectstroke
796 516 36 36 rectfill
796 516 36 36 rectstroke
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 344 m
576 344 m
578 345 l
580 347 l
582 349 l
584 351 l
586 352 l
588 354 l
591 356 l
593 357 l
595 359 l
597 361 l
599 363 l
601 364 l
603 366 l
605 368 l
607 369 l
609 371 l
611 373 l
613 375 l
615 376 l
617 378 l
620 380 l
622 381 l
624 383 l
626 385 l
628 387 l
630 388 l
632 390 l
634 392 l
636 393 l
638 395 l
640 397 l
642 399 l
644 400 l
646 402 l
649 404 l
651 405 l
653 407 l
655 409 l
657 411 l
659 412 l
661 414 l
663 416 l
665 417 l
667 419 l
669 421 l
671 423 l
673 424 l
676 426 l
678 428 l
680 429 l
682 431 l
684 433 l
686 435 l
688 436 l
690 438 l
692 440 l
694 441 l
696 443 l
698 445 l
700 446 l
702 448 l
705 450 l
707 452 l
709 453 l
711 455 l
713 457 l
715 458 l
717 460 l
719 462 l
721 464 l
723 465 l
725 467 l
727 469 l
729 470 l
731 472 l
734 474 l
736 476 l
738 477 l
740 479 l
742 481 l
744 482 l
746 484 l
748 486 l
750 488 l
752 489 l
754 491 l
756 493 l
758 494 l
761 496 l
763 498 l
765 500 l
767 501 l
769 503 l
771 505 l
773 506 l
775 508 l
777 510 l
779 512 l
781 513 l
783 515 l
785 517 l
787 518 l
790 520 l
792 522 l
794 524 l
796 525 l
798 527 l
800 529 l
802 530 l
804 532 l
806 534 l
808 536 l
810 537 l
812 539 l
814 541 l
816 542 l
819 544 l
821 546 l
823 548 l
825 549 l
827 551 l
829 553 l
831 554 l
833 556 l
835 558 l
837 559 l
839 561 l
841 563 l
843 565 l
846 566 l
848 568 l
850 570 l
852 571 l
854 573 l
856 575 l
858 577 l
860 578 l
862 580 l
864 582 l
866 583 l
868 585 l
870 587 l
872 589 l
875 590 l
877 592 l
879 594 l
881 595 l
883 597 l
885 599 l
887 601 l
889 602 l
891 604 l
893 606 l
895 607 l
897 609 l
899 611 l
901 613 l
904 614 l
906 616 l
908 618 l
910 619 l
912 621 l
914 623 l
916 625 l
918 626 l
920 628 l
922 630 l
924 631 l
926 633 l
928 635 l
931 637 l
933 638 l
935 640 l
937 642 l
939 643 l
941 645 l
943 647 l
945 649 l
947 650 l
949 652 l
951 654 l
953 655 l
955 657 l
957 659 l
960 661 l
962 662 l
964 664 l
966 666 l
968 667 l
970 669 l
972 671 l
974 672 l
976 674 l
978 676 l
980 678 l
982 679 l
984 681 l
987 683 l
989 684 l
991 686 l
993 688 l
995 690 l
997 691 l
999 693 l
1001 695 l
1003 696 l
1005 698 l
1007 700 l
1009 702 l
1011 703 l
1013 705 l
1016 707 l
1018 708 l
1020 710 l
1022 712 l
1024 714 l
1026 715 l
1028 717 l
1030 719 l
1032 720 l
1034 722 l
1036 724 l
1038 726 l
1040 727 l
1042 729 l
1045 731 l
1047 732 l
1049 734 l
1051 736 l
1053 738 l
1055 739 l
1057 741 l
1059 743 l
1061 744 l
1063 746 l
1065 748 l
1067 750 l
1069 751 l
1072 753 l
1074 755 l
1076 756 l
1078 758 l
1080 760 l
1082 762 l
1084 763 l
1086 765 l
1088 767 l
1090 768 l
1092 770 l
1094 772 l
1096 774 l
1098 775 l
1101 777 l
1103 779 l
1105 780 l
1107 782 l
1109 784 l
1111 785 l
1113 787 l
1115 789 l
1117 791 l
1119 792 l
1121 794 l
1123 796 l
1125 797 l
1127 799 l
1130 801 l
1132 803 l
1134 804 l
1136 806 l
1138 808 l
1140 809 l
1142 811 l
1144 813 l
1146 815 l
1148 816 l
1150 818 l
1152 820 l
1154 821 l
1157 823 l
1159 825 l
1161 827 l
1163 828 l
1165 830 l
1167 832 l
1169 833 l
1171 835 l
1173 837 l
1175 839 l
1177 840 l
1179 842 l
1181 844 l
1183 845 l
1186 847 l
1188 849 l
1190 851 l
1192 852 l
1194 854 l
1196 856 l
1198 857 l
1200 859 l
1202 861 l
1204 863 l
1206 864 l
1208 866 l
1210 868 l
1212 869 l
1215 871 l
1217 873 l
1219 875 l
1221 876 l
1223 878 l
1225 880 l
1227 881 l
1229 883 l
1231 885 l
1233 886 l
1235 888 l
1237 890 l
1239 892 l
1242 893 l
1244 895 l
1246 897 l
1248 898 l
1250 900 l
1252 902 l
1254 904 l
1256 905 l
1258 907 l
1260 909 l
1262 910 l
1264 912 l
1266 914 l
1268 916 l
1271 917 l
1273 919 l
1275 921 l
1277 922 l
1279 924 l
1281 926 l
1283 928 l
1285 929 l
1287 931 l
1289 933 l
1291 934 l
1293 936 l
1295 938 l
1297 940 l
1300 941 l
1302 943 l
1304 945 l
1306 946 l
1308 948 l
1310 950 l
1312 952 l
1314 953 l
1316 955 l
1318 957 l
1320 958 l
1322 960 l
1324 962 l
1327 964 l
1329 965 l
1331 967 l
1333 969 l
1335 970 l
1337 972 l
1339 974 l
1341 976 l
1343 977 l
1345 979 l
1347 981 l
1349 982 l
1351 984 l
1353 986 l
1356 988 l
1358 989 l
1360 991 l
1362 993 l
1364 994 l
1366 996 l
1368 998 l
1370 999 l
1372 1001 l
1374 1003 l
1376 1005 l
1378 1006 l
1380 1008 l
1382 1010 l
1385 1011 l
1387 1013 l
1389 1015 l
1391 1017 l
1393 1018 l
1395 1020 l
1397 1022 l
1399 1023 l
1401 1025 l
1403 1027 l
1405 1029 l
1407 1030 l
1409 1032 l
1412 1034 l
1414 1035 l
1416 1037 l
1418 1039 l
1420 1041 l
1422 1042 l
1424 1044 l
1426 1046 l
1428 1047 l
1430 1049 l
1432 1051 l
1434 1053 l
1436 1054 l
1438 1056 l
1441 1058 l
1443 1059 l
1445 1061 l
1447 1063 l
1449 1065 l
1451 1066 l
1453 1068 l
1455 1070 l
1457 1071 l
1459 1073 l
1461 1075 l
1463 1077 l
1465 1078 l
1467 1080 l
1470 1082 l
1472 1083 l
1474 1085 l
1476 1087 l
1478 1089 l
1480 1090 l
1482 1092 l
1484 1094 l
1486 1095 l
1488 1097 l
1490 1099 l
1492 1101 l
1494 1102 l
1497 1104 l
1499 1106 l
1501 1107 l
1503 1109 l
1505 1111 l
1507 1112 l
1509 1114 l
1511 1116 l
1513 1118 l
1515 1119 l
1517 1121 l
1519 1123 l
1521 1124 l
1523 1126 l
1526 1128 l
1528 1130 l
1530 1131 l
1532 1133 l
1534 1135 l
1536 1136 l
1538 1138 l
1540 1140 l
1542 1142 l
1544 1143 l
1546 1145 l
1548 1147 l
1550 1148 l
1552 1150 l
1555 1152 l
1557 1154 l
1559 1155 l
1561 1157 l
1563 1159 l
1565 1160 l
1567 1162 l
1569 1164 l
1571 1166 l
1573 1167 l
1575 1169 l
1577 1171 l
1579 1172 l
1582 1174 l
1584 1176 l
1586 1178 l
1588 1179 l
1590 1181 l
1592 1183 l
1594 1184 l
1596 1186 l
1598 1188 l
1600 1190 l
1602 1191 l
1604 1193 l
1606 1195 l
1608 1196 l
1611 1198 l
1613 1200 l
1615 1202 l
1617 1203 l
1619 1205 l
1621 1207 l
1623 1208 l
1625 1210 l
1627 1212 l
1629 1214 l
1631 1215 l
1633 1217 l
1635 1219 l
1637 1220 l
1640 1222 l
1642 1224 l
1644 1225 l
1646 1227 l
1648 1229 l
1650 1231 l
1652 1232 l
1654 1234 l
1656 1236 l
1658 1237 l
1660 1239 l
1662 1241 l
1664 1243 l
1667 1244 l
1669 1246 l
1671 1248 l
1673 1249 l
1675 1251 l
1677 1253 l
1679 1255 l
1681 1256 l
1683 1258 l
1685 1260 l
1687 1261 l
1689 1263 l
1691 1265 l
1693 1267 l
1696 1268 l
1698 1270 l
1700 1272 l
1702 1273 l
1704 1275 l
1706 1277 l
1708 1279 l
1710 1280 l
1712 1282 l
1714 1284 l
1716 1285 l
1718 1287 l
1720 1289 l
1723 1291 l
1725 1292 l
1727 1294 l
1729 1296 l
1731 1297 l
1733 1299 l
1735 1301 l
1737 1303 l
1739 1304 l
1741 1306 l
1743 1308 l
1745 1309 l
1747 1311 l
1749 1313 l
1752 1315 l
1754 1316 l
1756 1318 l
1758 1320 l
1760 1321 l
1762 1323 l
1764 1325 l
1766 1326 l
1768 1328 l
1770 1330 l
1772 1332 l
1774 1333 l
1776 1335 l
1778 1337 l
1781 1338 l
1783 1340 l
1785 1342 l
1787 1344 l
1789 1345 l
1791 1347 l
1793 1349 l
1795 1350 l
1797 1352 l
1799 1354 l
1801 1356 l
1803 1357 l
1805 1359 l
1808 1361 l
1810 1362 l
1812 1364 l
1814 1366 l
1816 1368 l
1818 1369 l
1820 1371 l
1822 1373 l
1824 1374 l
1826 1376 l
1828 1378 l
1830 1380 l
1832 1381 l
1834 1383 l
1837 1385 l
1839 1386 l
1841 1388 l
1843 1390 l
1845 1392 l
1847 1393 l
1849 1395 l
1851 1397 l
1853 1398 l
1855 1400 l
1857 1402 l
1859 1404 l
1861 1405 l
1863 1407 l
1866 1409 l
1868 1410 l
1870 1412 l
1872 1414 l
1874 1416 l
1876 1417 l
1878 1419 l
1880 1421 l
1882 1422 l
1884 1424 l
1886 1426 l
1888 1428 l
1890 1429 l
1893 1431 l
1895 1433 l
1897 1434 l
1899 1436 l
1901 1438 l
1903 1439 l
1905 1441 l
1907 1443 l
1909 1445 l
1911 1446 l
1913 1448 l
1915 1450 l
1917 1451 l
1919 1453 l
1922 1455 l
1924 1457 l
1926 1458 l
1928 1460 l
1930 1462 l
1932 1463 l
1934 1465 l
1936 1467 l
1938 1469 l
1940 1470 l
1942 1472 l
1944 1474 l
1946 1475 l
1948 1477 l
1951 1479 l
1953 1481 l
1955 1482 l
1957 1484 l
1959 1486 l
1961 1487 l
1963 1489 l
1965 1491 l
1967 1493 l
1969 1494 l
1971 1496 l
1973 1498 l
1975 1499 l
1978 1501 l
1980 1503 l
1982 1505 l
1984 1506 l
1986 1508 l
1988 1510 l
1990 1511 l
1992 1513 l
1994 1515 l
1996 1517 l
1998 1518 l
2000 1520 l
2002 1522 l
2004 1523 l
2007 1525 l
2009 1527 l
2011 1529 l
2013 1530 l
2015 1532 l
2017 1534 l
2019 1535 l
2021 1537 l
2023 1539 l
2025 1541 l
3 sw
st
2025 1541 m
2027 1542 l
2029 1544 l
2031 1546 l
2033 1547 l
2036 1549 l
2038 1551 l
2040 1552 l
2042 1554 l
2044 1556 l
2046 1558 l
2048 1559 l
2050 1561 l
2052 1563 l
2054 1564 l
2056 1566 l
2058 1568 l
2060 1570 l
2063 1571 l
2065 1573 l
2067 1575 l
2069 1576 l
2071 1578 l
2073 1580 l
2075 1582 l
2077 1583 l
2079 1585 l
2081 1587 l
2083 1588 l
2085 1590 l
2087 1592 l
2089 1594 l
2092 1595 l
2094 1597 l
2096 1599 l
2098 1600 l
2100 1602 l
2102 1604 l
2104 1606 l
2106 1607 l
2108 1609 l
2110 1611 l
2112 1612 l
2114 1614 l
2116 1616 l
2118 1618 l
2121 1619 l
2123 1621 l
2125 1623 l
2127 1624 l
2129 1626 l
2131 1628 l
2133 1630 l
2135 1631 l
2137 1633 l
2139 1635 l
2141 1636 l
2143 1638 l
2145 1640 l
2148 1642 l
2150 1643 l
2152 1645 l
2154 1647 l
2156 1648 l
2158 1650 l
2160 1652 l
2162 1654 l
2164 1655 l
2166 1657 l
2168 1659 l
2170 1660 l
2172 1662 l
2174 1664 l
2177 1665 l
2179 1667 l
2181 1669 l
2183 1671 l
2185 1672 l
2187 1674 l
2189 1676 l
2191 1677 l
2193 1679 l
2195 1681 l
2197 1683 l
2199 1684 l
2201 1686 l
2203 1688 l
2206 1689 l
2208 1691 l
2210 1693 l
2212 1695 l
2214 1696 l
2216 1698 l
2218 1700 l
2220 1701 l
2222 1703 l
2224 1705 l
2226 1707 l
2228 1708 l
2230 1710 l
2233 1712 l
2235 1713 l
2237 1715 l
2239 1717 l
2241 1719 l
2243 1720 l
2245 1722 l
2247 1724 l
2249 1725 l
2251 1727 l
2253 1729 l
2255 1731 l
2257 1732 l
2259 1734 l
2262 1736 l
2264 1737 l
2266 1739 l
2268 1741 l
2270 1743 l
2272 1744 l
2274 1746 l
2276 1748 l
2278 1749 l
2280 1751 l
2282 1753 l
2284 1755 l
2286 1756 l
2288 1758 l
2291 1760 l
2293 1761 l
2295 1763 l
2297 1765 l
2299 1766 l
2301 1768 l
2303 1770 l
2305 1772 l
2307 1773 l
2309 1775 l
2311 1777 l
2313 1778 l
2315 1780 l
2318 1782 l
2320 1784 l
2322 1785 l
2324 1787 l
2326 1789 l
2328 1790 l
2330 1792 l
2332 1794 l
2334 1796 l
2336 1797 l
2338 1799 l
2340 1801 l
2342 1802 l
2344 1804 l
2347 1806 l
2349 1808 l
2351 1809 l
2353 1811 l
2355 1813 l
2357 1814 l
2359 1816 l
2361 1818 l
2363 1820 l
2365 1821 l
2367 1823 l
2369 1825 l
2371 1826 l
2373 1828 l
2376 1830 l
2378 1832 l
2380 1833 l
2382 1835 l
2384 1837 l
2386 1838 l
2388 1840 l
2390 1842 l
2392 1844 l
2394 1845 l
2396 1847 l
2398 1849 l
2400 1850 l
2403 1852 l
2405 1854 l
2407 1856 l
2409 1857 l
2411 1859 l
2413 1861 l
2415 1862 l
2417 1864 l
2419 1866 l
2421 1868 l
2423 1869 l
2425 1871 l
2427 1873 l
2429 1874 l
2432 1876 l
2434 1878 l
2436 1879 l
2438 1881 l
2440 1883 l
2442 1885 l
2444 1886 l
2446 1888 l
2448 1890 l
2450 1891 l
2452 1893 l
2454 1895 l
2456 1897 l
2459 1898 l
2461 1900 l
2463 1902 l
2465 1903 l
2467 1905 l
2469 1907 l
2471 1909 l
2473 1910 l
2475 1912 l
2477 1914 l
2479 1915 l
2481 1917 l
2483 1919 l
2485 1921 l
2488 1922 l
2490 1924 l
2492 1926 l
2494 1927 l
2496 1929 l
2498 1931 l
2500 1933 l
2502 1934 l
2504 1936 l
2506 1938 l
2508 1939 l
2510 1941 l
2512 1943 l
2514 1945 l
2517 1946 l
2519 1948 l
2521 1950 l
2523 1951 l
2525 1953 l
2527 1955 l
2529 1957 l
2531 1958 l
2533 1960 l
2535 1962 l
2537 1963 l
2539 1965 l
2541 1967 l
2544 1969 l
2546 1970 l
2548 1972 l
2550 1974 l
2552 1975 l
2554 1977 l
2556 1979 l
2558 1981 l
2560 1982 l
2562 1984 l
2564 1986 l
2566 1987 l
2568 1989 l
2570 1991 l
2573 1992 l
2575 1994 l
2577 1996 l
2579 1998 l
2581 1999 l
2583 2001 l
2585 2003 l
2587 2004 l
2589 2006 l
2591 2008 l
2593 2010 l
2595 2011 l
2597 2013 l
2599 2015 l
2602 2016 l
2604 2018 l
2606 2020 l
2608 2022 l
2610 2023 l
2612 2025 l
2614 2027 l
2616 2028 l
2618 2030 l
2620 2032 l
2622 2034 l
2624 2035 l
2626 2037 l
2629 2039 l
2631 2040 l
2633 2042 l
2635 2044 l
2637 2046 l
2639 2047 l
2641 2049 l
2643 2051 l
2645 2052 l
2647 2054 l
st
gr
gs
gs
1 -1 sc
191 -1356 tr
90 ro
/MC2_Arial 91 self 0 0 m
(VFE)[61 56 61 ] xs
1 -1 sc
gr
gs
1 -1 sc
191 -1178 tr
90 ro
/MC2_Arial 91 self 0 0 m
( \(eV\))[25 30 51 61 30 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1491 -2323 m
(1/n)[51 25 51 ] xs
1 -1 sc
1 -1 sc
1618 -2323 m
( \(10)[25 30 51 51 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 55 self 1775 -2278 m
(-3)[18 31 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 91 self 1824 -2323 m
(\))[30 ] xs
1 -1 sc
gr
2120 144 m
3004 144 l
3004 381 l
2120 381 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
st
gs
gs
gr
gs
2215 190 36 36 rectfill
2120 381 m
2215 190 36 36 rectstroke
gr
1 -1 sc
/MC1_Arial 91 self 2334 -238 m
( )[25 ] xs
1 -1 sc
1 -1 sc
2359 -238 m
(VFE)[61 56 61 ] xs
1 -1 sc
gs
gr
gs
gs
2132 318 m
2334 318 l
st
gr
gr
1 -1 sc
2334 -349 m
( Liner Fit of )[25 51 20 51 51 30 25 56 20 25 25 51 26 25 ] xs
1 -1 sc
1 -1 sc
2815 -349 m
(VFE)[61 56 61 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
